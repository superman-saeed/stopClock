{"version":3,"sources":["components/Display.js","components/BtnDisplay.js","components/MarkDisplay.js","index.js"],"names":["TimerDisplay","react_default","a","createElement","className","concat","this","props","min","sec","React","Component","BtnDisplay","onClick","startClick","start_name","pauseClick","pause_name","remarkClick","MarkDisplay","items","list","map","item","index","key","INITSTATE","msec","timer","mark","timer_pause","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","state","setState","stopTimer","startTimer","_this2","timerID","setInterval","tick","resetClock","clearInterval","push","Display","components_BtnDisplay","components_MarkDisplay","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a6e62c89.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass TimerDisplay extends React.Component{\n\t// Display stopclock secound and minute count\n\trender(){\n\t\treturn(\n\t\t <div className='time-display'>\n\t\t  <h1>{`${this.props.min}m`}</h1>\n\t\t  <h1>{`${this.props.sec}s`}</h1>\n\t\t </div>\n\t\t);\n\t}\n\n}\nexport default TimerDisplay;\n","import React from 'react';\n\n\nclass BtnDisplay extends React.Component{\n\trender(){\n\t\treturn(\n\t\t\t<div className='btn-display'>\n\t\t\t<button onClick={this.props.startClick}>\n\t\t\t{this.props.start_name}\n\t\t\t</button>\n\t\t\t<button onClick={this.props.pauseClick}>\n\t\t\t{this.props.pause_name}\n\t\t\t</button>\n\t\t\t<button onClick={this.props.remarkClick}>\n\t\t\t mark\n\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\n}\nexport default BtnDisplay;\n","import React from 'react';\n\n// to display a list of clocked timers\nclass MarkDisplay extends React.Component{\n\trender(){\n\t\tconst items =this.props.list.map(\n\t\t\t(item,index)=><li key={index}>{item}</li>\n\t\t)\n\t\treturn(\n\t\t  <ol>{items}</ol>\n\t\t);\n\t}\n}\nexport default MarkDisplay;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TimerDisplay from './components/Display';\nimport BtnDisplay from './components/BtnDisplay';\nimport MarkDisplay from './components/MarkDisplay';\nimport  './stylesheets/index.css';\n\n// to set state to default\nconst INITSTATE={\n\t\t\tmin:0,\n\t\t\tsec:0,\n\t\t\tmsec:0,\n\t\t\ttimer:false,\n\t\t\tmark:[],\n\t\t\ttimer_pause:false\n\t\t};\n\nclass App extends React.Component{\n\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.startClick = this.startClick.bind(this);\n\t\tthis.pauseClick = this.pauseClick.bind(this);\n\t\tthis.remarkClick = this.remarkClick.bind(this);\n\t\tthis.state = INITSTATE;// creating to recall timer chamges\n\t}\n\t// reset ticking Clock\n\tresetClock(){\n\t\tthis.setState (INITSTATE);\n\t}\n\t// to start the timer\n\tstartClick(){\n\t\tif(!this.state.timer){// if timer not running, start it.\n\t\tthis.setState({sec:1,timer:true});\n        // start counting\n\t\t this.startTimer(this);\n\t\t}else{\n\t\t\tthis.stopTimer();// else stop timer if its running\n\t\t}\n\t}\n\n\tstartTimer(){\n\t\tthis.timerID = setInterval(\n\t\t  () => this.tick(),\n\t\t  1000\n\t\t);\n\t}\n\tstopTimer(){\n\t\t// check if timer has been clear\n\t\tif(this.state.timer_pause){\n\t\t\tthis.resetClock();\n\t\t}else{\n\t\tclearInterval(this.timerID);\n\t\t    this.resetClock();\n\t\t}\n\n\n\t}\n\tpauseClick(){\n\t\t//check if clock is ticking\n\t\tif(this.state.timer && !this.state.timer_pause){\n\n\t\t\tclearInterval(this.timerID);//stop the ticking\n\t\t\tthis.setState({timer_pause:true});\n\t\t} else if(this.state.timer_pause){\n\t\t\tthis.setState({timer_pause:false});\n\t\t\tthis.startTimer();\n\n\n\t\t}\n\n\t}\n\tremarkClick(){\n\t  if(this.state.timer){\n\t\t  const item =`${this.state.min}min ${this.state.sec}sec`;\n\t\t  this.setState((state,props)=>{mark:state.mark.push(item)});\n\n\t  }\n\t}\n\n\n\tcomponentWillUnmount() {\n\tclearInterval(this.timerID);\n\t}\n\n\ttick() {\n\n\t\tif(this.state.sec !==60){\n\t\t\tthis.setState((state,props)=>({\n\t\t\t\tsec:1 + state.sec\n\t\t\t  }));\n\t\t}else{\n\t\t\tthis.setState((state,props)=>({\n\t\t\tmin:1 + state.min,\n\t\t\tsec:0\n\t\t\t}));\n\t\t}\n\t}\n\trender(){\n\t\treturn(\n\t\t <div className='app'>\n\t\t <h1>Stop watch</h1><hr/>\n\t\t <div className='content'>\n\t\t <TimerDisplay\n\t\t\t min={this.state.min}\n\n\t\t\t sec={this.state.sec}\n\n\t\t\t msec={this.state.msec}\n\t\t />\n\t\t <div><hr/>\n\t\t <BtnDisplay\n\t\t start_name={(this.state.timer)?'stop':'start'}\n\t\t pause_name={(this.state.timer_pause)?'resume':'pause'}\n\t\t startClick={this.startClick}\n\t\t pauseClick={this.pauseClick}\n\t\t remarkClick={this.remarkClick}\n\t\t  />\n\t\t  </div>\n\t\t  <MarkDisplay list={this.state.mark} />\n\t\t  </div>\n\t\t </div>\n\t\t);\n\t}\n\n}\n\n\n\n\n\nReactDOM.render(<App />,\n\t\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}